{
    "name": "cyclonedx/cyclonedx-library",
    "description": "Work with Bill-of-Materials (BOM) in CycloneDX format.",
    "license": "Apache-2.0",
    "type": "library",
    "keywords": [
        "CycloneDX",
        "models",
        "normalizer",
        "serializer",
        "validator",
        "bill-of-materials",
        "BOM",
        "software-bill-of-materials",
        "SBOM",
        "OBOM",
        "MBOM",
        "SaaSBOM",
        "VEX",
        "package-url",
        "PURL",
        "SPDX",
        "OWASP"
    ],
    "authors": [
        {
            "name": "Jan Kowalleck",
            "email": "jan.kowalleck@gmail.com",
            "homepage": "https://github.com/jkowalleck"
        }
    ],
    "homepage": "https://github.com/CycloneDX/cyclonedx-php-library/#readme",
    "support": {
        "issues": "https://github.com/CycloneDX/cyclonedx-php-library/issues",
        "source": "https://github.com/CycloneDX/cyclonedx-php-library/"
    },
    "funding": [
        {
            "type": "github",
            "url": "https://github.com/sponsors/jkowalleck"
        },
        {
            "type": "other",
            "url": "https://owasp.org/donate/?reponame=www-project-cyclonedx&title=OWASP+CycloneDX"
        }
    ],
    "require": {
        "php": "^8.1",
        "ext-dom": "*",
        "ext-json": "*",
        "ext-libxml": "*",
        "composer/spdx-licenses": "^1.5",
        "opis/json-schema": "^2.0",
        "package-url/packageurl-php": "^1.0"
    },
    "require-dev": {
        "ext-simplexml": "*",
        "roave/security-advisories": "dev-latest"
    },
    "prefer-stable": true,
    "autoload": {
        "psr-4": {
            "CycloneDX\\Core\\": "src/Core/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "CycloneDX\\Tests\\": "tests/"
        }
    },
    "config": {
        "allow-plugins": {
            "ergebnis/composer-normalize": true,
            "icanhazstring/composer-unused": true
        },
        "preferred-install": "dist",
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "2.x-dev"
        },
        "composer-normalize": {
            "indent-size": 4,
            "indent-style": "space"
        }
    },
    "scripts": {
        "cs-fix": "@php tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --diff",
        "dev-setup": [
            "@composer -d tools/composer-normalize update",
            "@composer -d tools/composer-require-checker update",
            "@composer -d tools/composer-unused update",
            "@composer -d tools/php-cs-fixer update",
            "@composer -d tools/phpmd update",
            "@composer -d tools/psalm update",
            "@composer -d tools/infection update",
            "@composer -d tools/phpunit update",
            "@composer update"
        ],
        "normalize": "@composer -d tools/composer-normalize normalize --diff $PWD/composer.json",
        "test": [
            "@composer validate",
            "@test:psalm",
            "@test:phpunit",
            "@test:cs-fixer",
            "@test:phpmd",
            "@test:composer-unused",
            "@test:composer-require-checker",
            "@test:composer-normalize"
        ],
        "test:composer-normalize": "@composer -d tools/composer-normalize normalize --dry-run $PWD/composer.json",
        "test:composer-require-checker": "@php tools/composer-require-checker/vendor/maglnet/composer-require-checker/bin/composer-require-checker",
        "test:composer-unused": "@php tools/composer-unused/vendor/icanhazstring/composer-unused/bin/composer-unused --excludeDir=tools",
        "test:cs-fixer": "@php tools/php-cs-fixer/vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --dry-run --diff",
        "test:infection": "@php -d zend.assertions=1 -d assert.exception=1 -d display_errors=On -d error_reporting=-1 -d log_errors_max_len=0 -d memory_limit=-1 -d xdebug.mode=coverage -d pcov.enabled=1 -d pcov.directory=src tools/infection/vendor/infection/infection/bin/infection ",
        "test:phpmd": "@php tools/phpmd/vendor/phpmd/phpmd/src/bin/phpmd src ansi phpmd.xml",
        "test:phpunit": "@php -d zend.assertions=1 -d assert.exception=1 -d display_errors=On -d error_reporting=-1 -d log_errors_max_len=0 -d memory_limit=-1 -d xdebug.mode=coverage -d pcov.enabled=1 -d pcov.directory=src tools/phpunit/vendor/phpunit/phpunit/phpunit",
        "test:psalm": "@php tools/psalm/vendor/vimeo/psalm/psalm"
    },
    "scripts-descriptions": {
        "cs-fix": "Fix files according to coding standards.",
        "dev-setup": "Install dev-requirements and tools.",
        "normalize": "Normalize composer.json",
        "test": "Run all tests!",
        "test:composer-normalize": "Test if composer.json was normalized.",
        "test:composer-require-checker": "Test compoer requirements with composer-require-checker.",
        "test:composer-unused": "Test compoer requirements with composer-unused.",
        "test:cs-fixer": "Test coding standards with PHP-CS-fixer.",
        "test:infection": "Run mutation tests with Infection.",
        "test:phpmd": "Run mess-detector with phpMD.",
        "test:phpunit": "Run tests with PHPUnit.",
        "test:psalm": "Run static code analysis with Psalm."
    }
}
